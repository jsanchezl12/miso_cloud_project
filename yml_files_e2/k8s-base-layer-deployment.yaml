###################################
# user-management
###################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: users
  labels:
    app: users
spec:
  replicas: 1
  selector:
    matchLabels:
      app: users

  template:
    metadata:
      labels:
        app: users
    spec:
      containers:
        - name: users
          image: us-central1-docker.pkg.dev/gcloudprojectg14e2/entrega2-g14/users:2.0
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          env:
            - name: "DATABASE_URL"
              valueFrom:
                secretKeyRef:
                  name: appsecrets 
                  key: uri
          ports:
            - containerPort: 3000
          imagePullPolicy: Always
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: users-config
spec:
  healthCheck:
    checkIntervalSec: 30
    port: 3000
    type: HTTP
    requestPath: /users/ping
---
kind: Service
apiVersion: v1
metadata:
  name: servicio-users
  annotations:
    cloud.google.com/backend-config: '{"default": "users-config"}'
spec:
  type: NodePort
  selector:
    app: users
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000
      nodePort: 31010
---
###################################
# post-management
###################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: posts
  labels:
    app: posts
spec:
  replicas: 1
  selector:
    matchLabels:
      app: posts

  template:
    metadata:
      labels:
        app: posts
    spec:
      containers:
        - name: posts
          image: us-central1-docker.pkg.dev/gcloudprojectg14e2/entrega2-g14/posts:2.0
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          env:
            - name: "DATABASE_URL"
              valueFrom:
                secretKeyRef:
                  name: appsecrets 
                  key: uri
            - name: "USERS_PATH"
              value: servicio-users
          ports:
            - containerPort: 3001
          imagePullPolicy: Always
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: posts-config
spec:
  healthCheck:
    checkIntervalSec: 30
    port: 3001
    type: HTTP
    requestPath: /posts/ping
---
kind: Service
apiVersion: v1
metadata:
  name: servicio-posts
  annotations:
    cloud.google.com/backend-config: '{"default": "posts-config"}'
spec:
  type: NodePort
  selector:
    app: posts
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3001
      nodePort: 31011
---
###################################
# route-management
###################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: routes
  labels:
    app: routes
spec:
  replicas: 1
  selector:
    matchLabels:
      app: routes

  template:
    metadata:
      labels:
        app: routes
    spec:
      containers:
        - name: routes
          image: us-central1-docker.pkg.dev/gcloudprojectg14e2/entrega2-g14/routes:2.0
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          env:
            - name: "DATABASE_URL"
              valueFrom:
                secretKeyRef:
                  name: appsecrets 
                  key: uri
            - name: "USERS_PATH"
              value: servicio-users
          ports:
            - containerPort: 3002
          imagePullPolicy: Always
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: routes-config
spec:
  healthCheck:
    checkIntervalSec: 30
    port: 3002
    type: HTTP
    requestPath: /routes/ping
---
kind: Service
apiVersion: v1
metadata:
  name: servicio-routes
  annotations:
    cloud.google.com/backend-config: '{"default": "routes-config"}'
spec:
  type: NodePort
  selector:
    app: routes
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3002
      nodePort: 31012
---
###################################
# offer-management
###################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: offers
  labels:
    app: offers
spec:
  replicas: 1
  selector:
    matchLabels:
      app: offers

  template:
    metadata:
      labels:
        app: offers
    spec:
      containers:
        - name: offers
          image: us-central1-docker.pkg.dev/gcloudprojectg14e2/entrega2-g14/offers:2.0
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          env:
            - name: "DATABASE_URL"
              valueFrom:
                secretKeyRef:
                  name: appsecrets 
                  key: uri
            - name: "USERS_PATH"
              value: servicio-users
          ports:
            - containerPort: 3003
          imagePullPolicy: Always
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: offers-config
spec:
  healthCheck:
    checkIntervalSec: 30
    port: 3003
    type: HTTP
    requestPath: /offers/ping
---
kind: Service
apiVersion: v1
metadata:
  name: servicio-offers
  annotations:
    cloud.google.com/backend-config: '{"default": "offers-config"}'
spec:
  type: NodePort
  selector:
    app: offers
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3003
      nodePort: 31013
---